1.分布式系统概念： 分开部署 网络通信
2.关注的点
    吞吐量： 集群
    可靠性:  冗余部署
    扩展性(快速扩容)： 无状态设计

3.架构分类
    all in one
        优点：开发简单 性能好 运维简单 架构简单
        缺点: 隔离性差 协同效率低
    分体架构
        优点：迭代快 稳定性高 故障范围小 容易扩展
        缺点: 开发成本高 基础依赖度高 运维复杂 性能差

4.如何选择
    结合公司情况和业务目标
    架构不是一成不变
    避免过度设计
    容易扩展的

5.技术挑战
    节点故障 节点多 快速定位
    机器性能差异 性能预估 合理利用资源
    网络不可靠性  错误兼容
    基础组件   通用 赋能业务
    服务治理 复杂度高

6.技术点
    运行环境 ： 机器
    基础设施： nginx dns cdn
    模块划分： 单体 soa 微服务
    存储资源：rdbms kv 对象存储
    基础组件：spring 等
    测试运维：CI/CD devops

7.标准
    可用性： 线上Ap 
    性能/吞吐量：
    扩展性：无状态
    一致性: 分布式事务

8.主要技术点
    负载均衡
    session管理 
    通讯 rpc
    服务注册与发现
    消息队列
    配置中心
    分布式锁
    分布式事务
    缓存/分布式缓存
    存储/分布式存储

9.常见架构方式
    单体架构
        优点：开发简单 易于部署
        缺点：隔离性差 协同效率低
        公司起步阶段
    
    单体 分层架构 扩展稍微灵活一点

    微服务（SOA） 按照业务垂直拆（数据 缓存独占）

10.分布式架构的结构
    网关    鉴权 协议转发 数据校验 负载均衡
    业务    处理业务
    
11.分布式的基础架构
    消息队列
    监控报警
    注册中心
    配置中心
    分布式事务

12.技术选型
    网关： spring-cloud-gateway
    监控平台： open-falcon prometheus
    rpc： http
    注册中心： zk
    mq: （日志）kafka/ （业务）rocketmq
    配置中心: Apollo

TIDB的坑
    没有悲观锁 只有乐观锁 只能提交时候报错
    选择索引不智能 强行指定索引
    耗资源 磁盘 cpu 网卡
    解决的就是分库分表的问题